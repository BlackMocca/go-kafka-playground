version: "3"

services: 

  app:
    build:
      context: ./
      dockerfile: ./Dockerfile-development
    container_name: app
    env_file: .env
    depends_on:
      - psql_db
    networks: 
      - kafkaservice
      - dbservice
    ports:
      - 3000:3000
    volumes:
      - .:/go/src/app
  
  psql_db:
    build:
      dockerfile: ./Dockerfile
      context: ./docker-script/postgres
    restart: always
    container_name: psql_db
    networks: 
      - dbservice
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB_PROD=app_example
      - POSTGRES_DB_TEST=app_example_test

  mongo_db:
    build:
      dockerfile: ./Dockerfile
      context: ./docker-script/mongodb
    container_name: mongo_db
    networks:
      - dbservice
    ports:
      - 27017:27017
    environment:
      - MONGO_USER=mongo
      - MONGO_PASSWORD=mongo
      - MONGO_PROD=app_example
    restart: always

  zookeeper-1:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper-1
    ports: 
      - "2181:2181"
    networks: 
      - kafkaservice

  kafka-1:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka-1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper-1
    networks: 
      - kafkaservice
    restart: always
    environment:
      HOSTNAME_COMMAND: "sed 's/MACHINE_HOST=/''/g' .kafka.env"
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_HOST_NAME: _{HOSTNAME_COMMAND}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_CREATE_TOPICS: "myTopic:1:1"
    volumes:
      - ./.kafka.env:/.kafka.env
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-2:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka-2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper-1
    networks: 
      - kafkaservice
    restart: always
    environment:
      HOSTNAME_COMMAND: "sed 's/MACHINE_HOST=/''/g' .kafka.env"
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ADVERTISED_HOST_NAME: _{HOSTNAME_COMMAND}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9093,
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_CREATE_TOPICS: "myTopic:1:1"
    volumes:
      - ./.kafka.env:/.kafka.env
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-3:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka-3
    ports:
      - "9094:9094"
    depends_on:
      - zookeeper-1
    networks: 
      - kafkaservice
    restart: always
    environment:
      HOSTNAME_COMMAND: "sed 's/MACHINE_HOST=/''/g' .kafka.env"
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ADVERTISED_HOST_NAME: _{HOSTNAME_COMMAND}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9094,
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_CREATE_TOPICS: "myTopic:1:1"
    volumes:
      - ./.kafka.env:/.kafka.env
      - /var/run/docker.sock:/var/run/docker.sock


  adminer:
    image: adminer
    restart: always
    container_name: adminer
    networks: 
      - dbservice
    ports:
      - 8080:8080

networks:
  dbservice:
    driver: bridge
  kafkaservice:
    driver: bridge